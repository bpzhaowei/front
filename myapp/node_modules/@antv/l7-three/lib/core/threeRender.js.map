{"version":3,"sources":["../../src/core/threeRender.ts"],"names":["ThreeRender","scene","sceneContainer","getServiceContainer","bind","ThreeRenderServiceType","to","ThreeRenderService","inSingletonScope","threeRenderService","get","init"],"mappings":";;;;;;;;;;;;;;;AACA;;IAMqBA,W;AAEnB,uBAAYC,KAAZ,EAA0B;AAAA;AAAA;AACxB,QAAMC,cAAc,GAAGD,KAAK,CAACE,mBAAN,EAAvB;AACAD,IAAAA,cAAc,CACXE,IADH,CAC6BC,0CAD7B,EAEGC,EAFH,CAEMC,sCAFN,EAGGC,gBAHH;AAKA,SAAKC,kBAAL,GAA0BP,cAAc,CAACQ,GAAf,CACxBL,0CADwB,CAA1B;AAGD;;;;WACD,gBAAc;AACZ,WAAKI,kBAAL,CAAwBE,IAAxB;AACD","sourcesContent":["import { Scene } from '@antv/l7-scene';\nimport {\n  IThreeRenderService,\n  ThreeRenderService,\n  ThreeRenderServiceType,\n} from './threeRenderService';\n\nexport default class ThreeRender {\n  public threeRenderService: IThreeRenderService;\n  constructor(scene: Scene) {\n    const sceneContainer = scene.getServiceContainer();\n    sceneContainer\n      .bind<IThreeRenderService>(ThreeRenderServiceType)\n      .to(ThreeRenderService)\n      .inSingletonScope();\n\n    this.threeRenderService = sceneContainer.get<IThreeRenderService>(\n      ThreeRenderServiceType,\n    );\n  }\n  public init() {\n    this.threeRenderService.init();\n  }\n}\n"],"file":"threeRender.js"}