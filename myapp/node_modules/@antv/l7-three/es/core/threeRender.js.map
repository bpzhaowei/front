{"version":3,"sources":["../../src/core/threeRender.ts"],"names":["ThreeRenderService","ThreeRenderServiceType","ThreeRender","scene","sceneContainer","getServiceContainer","bind","to","inSingletonScope","threeRenderService","get","init"],"mappings":";;;AACA,SAEEA,kBAFF,EAGEC,sBAHF,QAIO,sBAJP;;IAMqBC,W;AAEnB,uBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,QAAMC,cAAc,GAAGD,KAAK,CAACE,mBAAN,EAAvB;AACAD,IAAAA,cAAc,CACXE,IADH,CAC6BL,sBAD7B,EAEGM,EAFH,CAEMP,kBAFN,EAGGQ,gBAHH;AAKA,SAAKC,kBAAL,GAA0BL,cAAc,CAACM,GAAf,CACxBT,sBADwB,CAA1B;AAGD;;;;WACD,gBAAc;AACZ,WAAKQ,kBAAL,CAAwBE,IAAxB;AACD;;;;;;SAfkBT,W","sourcesContent":["import { Scene } from '@antv/l7-scene';\nimport {\n  IThreeRenderService,\n  ThreeRenderService,\n  ThreeRenderServiceType,\n} from './threeRenderService';\n\nexport default class ThreeRender {\n  public threeRenderService: IThreeRenderService;\n  constructor(scene: Scene) {\n    const sceneContainer = scene.getServiceContainer();\n    sceneContainer\n      .bind<IThreeRenderService>(ThreeRenderServiceType)\n      .to(ThreeRenderService)\n      .inSingletonScope();\n\n    this.threeRenderService = sceneContainer.get<IThreeRenderService>(\n      ThreeRenderServiceType,\n    );\n  }\n  public init() {\n    this.threeRenderService.init();\n  }\n}\n"],"file":"threeRender.js"}